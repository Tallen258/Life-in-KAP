
∇Join{⍕¯1↓,⍉2 ¯1⍴⍵,(⍴⍵)⍴⍕⍺}
∇ToString{if ((typeof ⍵)=typeof "") {@[, (@, Join ToString¨ ⍵), @]} else { ⍕⍵}}
∇AssertEquals{if (⍺≢⍵) {:failedAssertion throw ("Assertion Failed! expected: " (typeof ⍺) " '" (ToString ⍺) "' but was " (typeof ⍵) " '" (ToString ⍵) "'")}}

boardSize ← 10
walker ← (3 3 ⍴ ⍳ 9) ∊ 1 3 6 7 8 
walker2 ← (3 3 ⍴ ⍳ 9) ∊ 1 3 6 7 8 
Board1 ← ⊂boardSize boardSize ↑ (walker)
Board2 ← ⊂boardSize boardSize ↑ 5 ⌽ 5 ⊖ (walker2)

∇ countNeighbors { +/ +/ 1 0 ¯1 ⊖⌻ 1 0 ¯1 ⌽¨ ⍵}

∇ team countTeamNeighbors board{countNeighbors team = board} ⍝ alpha is team name, 


⍝∇ Board {⍺ + ⍵}
⍝(gui:draw) life (Board2 + Board1)

∇ Survive {⍵ ∧ ∨/ 3 4 =¨ countNeighbors ⍵}
∇ ToBeBorn {⊂(~⊃⍵) ∧ 3 = ⊃countNeighbors ⍵}

⍝3 = countNeighbors Board1
∇ LifeIteration {(ToBeBorn ⍵) + Survive ⍵}

LifeIteration Board1

1 countTeamNeighbors Board1 ⍝ less than or equal to 
